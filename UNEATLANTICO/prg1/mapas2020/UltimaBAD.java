import java.util.Scanner;

// https://stackoverflow.com/questions/56679782/how-to-use-ansi-escape-sequence-color-codes-for-psreadlineoption-v2-in-powershel
// https://i.stack.imgur.com/KTSQa.png

class UltimaBAD {

        public static void main(String[] args) {

                final int[][] ULTIMA = {
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 8, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 6, 2, 3, 3, 3, 3, 2, 8, 3, 3, 3,
                                                3, 3, 3, 3, 8,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 2, 3, 3, 3, 3, 3, 3,
                                                3, 8, 8, 3, 3, 3, 3, 9,
                                                9, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 2, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 8, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 9, 9, 8, 8, 3, 3,
                                                3, 3, 3, 3, 8,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 2, 2, 3, 3, 3, 3, 8,
                                                8, 8, 8, 3, 3, 3, 8, 0,
                                                8, 9, 2, 9, 3, 3, 3, 3, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 9, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 0, 8, 8, 8, 3,
                                                3, 3, 3, 3, 2,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 2, 2, 3, 2, 2, 2,
                                                8, 8, 8, 3, 3, 3, 9, 9,
                                                8, 8, 9, 9, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 9, 9, 9, 9, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 8, 8, 2,
                                                3, 3, 3, 3, 3,
                                                8, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 9, 8, 8, 2, 2, 2, 2, 2, 8,
                                                8, 8, 8, 3, 3, 2, 9, 8,
                                                9, 8, 9, 9, 2, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 9, 0, 9, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 8, 8, 9, 8,
                                                3, 3, 3, 3, 3,
                                                2, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 9, 8, 8, 2, 2, 2, 8, 8,
                                                8, 8, 8, 3, 3, 8, 8, 8,
                                                9, 9, 9, 8, 8, 3, 3, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 2, 8, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 8, 9, 8,
                                                9, 3, 3, 3, 3,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 8, 8, 2, 2, 2, 2, 8,
                                                8, 8, 8, 3, 3, 8, 8, 9,
                                                8, 9, 8, 9, 8, 3, 2, 8, 8, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 8, 8, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 8, 9, 9,
                                                8, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 0, 8, 8, 2, 2, 2, 2, 8,
                                                8, 8, 2, 3, 3, 2, 9, 9,
                                                8, 9, 8, 9, 3, 3, 9, 9, 8, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 8, 8,
                                                2, 2, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 8, 2, 2, 2, 2, 2, 2,
                                                8, 8, 2, 3, 3, 2, 9, 8,
                                                8, 9, 9, 3, 3, 3, 9, 3, 8, 8, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 8, 8, 8,
                                                2, 2, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 8, 2, 2, 2, 2, 2, 2,
                                                8, 8, 2, 3, 3, 3, 8, 8,
                                                9, 9, 9, 3, 3, 3, 3, 3, 3, 8, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 8, 8, 8, 8,
                                                2, 2, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 2, 2, 2, 2, 2, 2, 2,
                                                2, 8, 2, 3, 3, 3, 8, 8,
                                                8, 8, 9, 3, 3, 3, 3, 3, 9, 8, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 8, 9, 8, 2,
                                                2, 2, 2, 2, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 8, 2, 3, 3, 3, 2, 8,
                                                8, 8, 2, 9, 3, 3, 3, 3, 9, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 9, 9, 8, 8,
                                                2, 2, 2, 2, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 9, 8,
                                                9, 9, 8, 9, 3, 3, 3, 3, 9, 9, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9, 9, 9,
                                                2, 2, 2, 2, 3,
                                                3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 9,
                                                9, 9, 8, 9, 3, 3, 8, 3, 3, 9, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9, 9, 9,
                                                2, 2, 2, 4, 3,
                                                3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3,
                                                3, 3, 9, 3, 3, 3, 8, 3, 4, 9, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9, 2,
                                                2, 2, 2, 3, 3,
                                                2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 9, 2, 2, 2, 2, 2, 2, 2, 2, 9,
                                                2, 2, 2, 3, 3,
                                                2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 3, 3, 2,
                                                2, 2, 3, 3, 9, 3, 3, 3,
                                                3, 3, 3, 3, 3, 2, 2, 8, 8, 8, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 8, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 9, 2, 2, 8, 2, 2, 2, 2, 2, 9,
                                                2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3,
                                                2, 3, 3, 3, 9, 3, 3, 3,
                                                8, 3, 3, 3, 2, 2, 2, 2, 8, 8, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 2, 2, 2, 3, 3, 3, 2, 2, 9, 9, 9, 8, 8, 8, 2, 2, 2, 2, 2,
                                                2, 9, 2, 2, 2,
                                                2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3,
                                                2, 3, 3, 3, 0, 3, 3, 3,
                                                3, 8, 3, 3, 2, 2, 2, 2, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 2, 2, 2, 2, 3, 3, 4, 9, 9, 8, 9, 9, 8, 2, 2, 2, 2, 2, 2,
                                                9, 9, 9, 9, 9,
                                                8, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 3, 3,
                                                9, 3, 3, 3, 9, 3, 3, 3,
                                                3, 8, 8, 3, 2, 2, 2, 2, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 2, 2, 2, 2, 2, 9, 3, 3, 3, 8, 8, 9, 8, 4, 8, 2, 2, 2, 2,
                                                8, 8, 9, 9, 8,
                                                8, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 3, 3,
                                                9, 3, 3, 3, 9, 3, 3, 3,
                                                3, 3, 8, 8, 2, 2, 2, 2, 2, 8, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 2, 2, 2, 2, 9, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 2, 2, 2,
                                                9, 9, 8, 9, 8,
                                                2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 4,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 8, 3, 8, 8, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 2, 2, 2, 2, 9, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 2, 2, 2,
                                                9, 8, 8, 8, 8,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 9,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 8, 8, 3, 8, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 2, 2, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 2, 2, 2,
                                                9, 8, 8, 8, 8,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 2, 2, 2, 2, 2, 2, 9,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 2, 8, 8, 8, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 2, 2, 3, 3, 3, 3, 3, 3, 3, 8, 2, 8, 8, 8, 2, 2, 2, 2,
                                                2, 9, 9, 8, 8,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 2, 2, 2, 2, 2, 2, 9,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 2, 8, 8, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 8, 2, 2, 8, 8, 2, 2, 2, 2,
                                                2, 2, 9, 8, 8,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 2, 2, 2, 2, 2, 2, 9,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 2, 8, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 8, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 9, 8,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 2, 2, 2, 2, 8,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 8, 2, 2, 2, 2, 2, 3, 3, 3, 9, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 9, 8,
                                                8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 2, 2, 2, 9, 8,
                                                8, 3, 3, 3, 3, 3, 8, 2,
                                                3, 3, 3, 2, 2, 2, 2, 9, 9, 3, 3, 9, 2, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 9, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 9, 8,
                                                8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 8,
                                                8, 8, 3, 3, 3, 4, 8, 8,
                                                3, 3, 3, 3, 2, 2, 2, 9, 2, 3, 3, 9, 2, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 9, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2,
                                                8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 2, 2, 2, 9,
                                                8, 8, 8, 3, 2, 2, 3, 8,
                                                2, 3, 3, 3, 3, 2, 2, 9, 2, 3, 3, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 9, 3, 3, 3, 3, 4, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2,
                                                2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2, 2, 2, 9,
                                                8, 8, 3, 3, 2, 2, 3, 3,
                                                2, 3, 3, 3, 3, 2, 2, 2, 2, 3, 9, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 2, 2, 2, 9,
                                                8, 8, 3, 3, 2, 8, 3, 3,
                                                8, 3, 3, 3, 3, 3, 2, 9, 2, 3, 9, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 8, 9, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 3,
                                                3, 3, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 2, 2, 8, 9,
                                                8, 8, 3, 3, 2, 8, 3, 2,
                                                8, 3, 3, 3, 3, 3, 9, 2, 3, 3, 9, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 9, 8, 9, 8, 2, 3, 3, 3, 3, 3, 3, 3, 8, 3, 3, 8, 8, 8, 2, 2, 2, 2,
                                                2, 2, 2, 2, 4,
                                                3, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 8, 8,
                                                8, 8, 2, 3, 2, 8, 8, 2,
                                                8, 3, 3, 3, 3, 3, 9, 3, 3, 3, 9, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 9, 8, 8, 8, 8, 9, 2, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                8, 8, 8, 3, 3, 8, 8, 8,
                                                8, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 2, 9, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 9, 8, 9, 8, 8, 9, 2, 3, 3, 3, 3, 3, 2, 8, 3, 2, 8, 8, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                8, 8, 8, 3, 3, 3, 8, 8,
                                                8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 8, 9, 8, 9, 8, 9, 2, 3, 3, 3, 3, 3, 2, 8, 8, 8, 8, 8, 2, 2, 2, 2,
                                                2, 2, 2, 2, 8,
                                                8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                8, 8, 8, 3, 3, 3, 8, 8,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 8, 9, 8, 9, 8, 9, 2, 8, 3, 3, 3, 2, 2, 2, 8, 8, 8, 2, 2, 2, 2, 2,
                                                2, 2, 2, 8, 8,
                                                8, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
                                                8, 8, 8, 3, 3, 3, 8, 8,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 8, 8, 8, 9, 8, 2, 2, 8, 3, 3, 3, 2, 2, 2, 2, 8, 2, 2, 2, 2, 2, 2,
                                                2, 2, 8, 8, 8,
                                                8, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 9, 2, 2, 2, 9, 2, 2, 2, 2,
                                                8, 8, 2, 3, 3, 3, 3, 8,
                                                3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 2, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 9, 9, 9, 8, 9, 2, 2, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 8, 8, 8, 8,
                                                8, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 2, 2, 8, 2, 2, 2, 2,
                                                8, 8, 2, 3, 3, 3, 3, 3,
                                                3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 2, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 9, 8, 8, 8, 9, 2, 2, 8, 3, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 8, 9, 8, 3,
                                                8, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 2, 2, 8, 9, 2, 2, 2,
                                                2, 2, 2, 2, 3, 3, 3, 3,
                                                3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 2, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 9, 9, 8, 9, 2, 8, 2, 2, 8, 3, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 8, 0, 8, 3,
                                                8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 9, 9, 2, 2, 2,
                                                2, 2, 2, 2, 3, 3, 3, 3,
                                                2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 2, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 9, 8, 9, 2, 9, 9, 2, 2, 8, 3, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 9, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 9, 8, 9, 2, 9, 9, 2, 2, 2, 8, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 9, 9, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 9, 9, 8, 8, 9, 9, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 2, 2, 2, 2, 2, 2, 8, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 9, 9, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 9, 8, 8, 8, 9, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 8, 2, 2, 2, 2, 2, 2, 2, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                9, 3, 9, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 9, 8, 2, 9, 2, 9, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                3, 3, 9, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 2, 2, 9, 2, 9, 9,
                                                9, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 3, 2, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 2, 2, 2, 2, 2, 9,
                                                9, 9, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 9, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9, 2, 2, 2, 2, 2, 2,
                                                2, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 9,
                                                0, 9, 2, 2, 2, 2, 2, 2,
                                                2, 8, 2, 2, 9, 2, 2, 2, 2, 2, 8, 2, 9, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 2, 3, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 9, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 9,
                                                9, 8, 2, 2, 2, 2, 2, 2,
                                                2, 8, 8, 9, 3, 3, 2, 2, 2, 2, 8, 2, 9, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 3, 3, 3, 8, 2, 2, 2, 2, 2, 2, 2, 9, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 9,
                                                8, 9, 2, 2, 2, 2, 2, 2,
                                                2, 8, 9, 9, 3, 9, 2, 2, 2, 2, 8, 2, 9, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 3, 3, 3, 8, 2, 2, 2, 2, 2, 9, 9, 9, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 9,
                                                8, 8, 9, 2, 2, 2, 2, 2,
                                                2, 8, 0, 9, 9, 2, 2, 2, 2, 2, 8, 8, 9, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 8, 9, 2, 3, 2, 8, 8, 2, 2, 2, 9, 9, 9, 9, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                3, 3, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 9,
                                                8, 8, 9, 2, 2, 2, 2, 2,
                                                8, 8, 2, 2, 2, 2, 2, 2, 3, 8, 8, 8, 2, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 2, 9, 2, 8, 8, 8, 2, 2, 2, 9, 2, 2, 2, 3, 3, 3, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                3, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2, 9,
                                                9, 8, 8, 9, 2, 2, 2, 2,
                                                8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 8, 8, 2, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 8, 8, 2, 2, 8, 8, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
                                                2, 2, 2, 3, 3,
                                                3, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 2, 9,
                                                8, 8, 8, 9, 8, 2, 2, 2,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 8, 2, 9, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 2, 2,
                                                2, 2, 2, 3, 3,
                                                2, 4, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 2, 3, 3, 3, 3, 3, 3, 2, 9,
                                                8, 8, 8, 8, 2, 3, 4, 2,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 9, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
                                                2, 2, 8, 8, 8,
                                                8, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 3, 3, 3, 3, 3, 3, 2, 9,
                                                8, 2, 2, 8, 2, 3, 3, 8,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 9, 9, 2, 2, 2, 2, 2, 2,
                                                2, 8, 8, 8, 8,
                                                8, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 2, 3, 3, 3, 3, 2, 2, 8,
                                                2, 2, 2, 8, 8, 3, 3, 8,
                                                8, 8, 8, 3, 3, 3, 3, 3, 3, 2, 8, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 9, 2, 9, 2, 2, 2, 2, 2, 2,
                                                2, 8, 8, 8, 8,
                                                8, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 3, 3, 3, 3, 2, 2, 2,
                                                2, 2, 2, 2, 8, 3, 3, 8,
                                                2, 8, 8, 3, 3, 3, 3, 3, 3, 2, 8, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 9, 9, 2, 2, 2, 9, 9, 9, 2, 2,
                                                2, 2, 8, 8, 8,
                                                8, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 3, 3, 3, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 3, 8, 8,
                                                2, 8, 2, 3, 3, 3, 3, 3, 2, 4, 2, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 2, 9, 2, 9, 3, 3, 9, 9,
                                                9, 2, 2, 8, 8,
                                                9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3, 3, 8, 3,
                                                2, 8, 2, 3, 3, 3, 3, 3, 2, 2, 9, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 9, 3, 3, 3, 3, 3,
                                                3, 9, 9, 2, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 2, 2,
                                                2, 3, 3, 3, 3, 3, 8, 3,
                                                2, 2, 3, 3, 3, 3, 3, 3, 9, 9, 9, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 9, 9, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 3, 8, 3, 2, 2, 3, 3, 3,
                                                3, 3, 3, 9, 9,
                                                9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 2,
                                                3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 8, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 2, 2, 9, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 8, 3, 2, 8, 2, 3, 3,
                                                3, 3, 3, 2, 2,
                                                9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 2, 3, 3, 3, 3, 3, 3,
                                                2, 8, 3, 3, 3, 3, 3, 2,
                                                2, 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 9, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 8, 8, 2, 8, 2, 3, 3,
                                                3, 3, 3, 2, 4,
                                                2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 6, 8, 2, 3, 3, 3, 3, 3, 2,
                                                8, 9, 9, 3, 3, 3, 3, 3,
                                                2, 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 9, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 8, 3, 3, 8, 2, 8, 8, 3, 3,
                                                3, 3, 3, 3, 2,
                                                8, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 3, 3, 3, 3, 3, 2, 8,
                                                8, 9, 2, 2, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 9, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 2, 9, 3, 3, 3, 2, 2, 8, 2, 2, 2, 8, 8, 3, 3, 8, 8, 8, 8, 3, 3,
                                                3, 3, 3, 3, 2,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 2, 3, 3, 3, 3, 3, 8, 8,
                                                8, 8, 2, 2, 2, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 2, 2, 9, 9, 9, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 9, 9, 3, 3, 3, 3, 2, 9, 8, 2, 2, 8, 2, 3, 3, 8, 8, 8, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 3, 3, 3, 3, 3, 2, 8, 8,
                                                8, 2, 2, 2, 2, 3, 3, 3,
                                                3, 3, 3, 3, 2, 2, 2, 9, 9, 9, 8, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 2, 9, 3, 3, 3, 3, 3, 2, 9, 8, 8, 8, 8, 2, 3, 4, 2, 8, 8, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 9, 9, 2, 8,
                                                8, 2, 2, 2, 2, 2, 3, 3,
                                                3, 3, 3, 2, 2, 2, 2, 8, 9, 9, 8, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 9, 3, 3, 3, 3, 3, 3, 2, 9, 8, 8, 8, 9, 8, 2, 2, 2, 8, 8, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 9, 8,
                                                2, 2, 2, 2, 2, 2, 3, 3,
                                                2, 2, 2, 2, 2, 2, 2, 2, 8, 8, 8, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 9, 8, 8, 9, 2, 2, 2, 2, 8, 8, 8, 3, 3,
                                                3, 3, 3, 3, 3,
                                                8, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 9, 8,
                                                2, 2, 2, 2, 2, 2, 3, 8,
                                                2, 2, 2, 2, 2, 2, 2, 2, 8, 8, 8, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 8, 8, 9, 2, 2, 2, 2, 2, 8, 8, 2, 2, 2,
                                                2, 2, 2, 3, 8,
                                                8, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 8, 8,
                                                2, 2, 2, 2, 2, 2, 3, 8,
                                                2, 2, 2, 2, 2, 2, 2, 2, 2, 8, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 8, 8, 9, 2, 2, 2, 2, 2, 2, 8, 0, 9, 9,
                                                2, 2, 2, 2, 2,
                                                8, 8, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 8,
                                                8, 9, 2, 2, 2, 3, 3, 8,
                                                8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 8, 9, 2, 2, 2, 2, 2, 2, 2, 8, 9, 9, 3,
                                                9, 2, 2, 2, 2,
                                                8, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 8, 8,
                                                8, 9, 2, 2, 3, 3, 3, 8,
                                                8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 9, 8, 2, 2, 2, 2, 2, 2, 2, 8, 8, 9, 3,
                                                3, 2, 2, 2, 2,
                                                8, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 8, 8,
                                                9, 9, 2, 2, 3, 3, 2, 8,
                                                8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 0, 9, 2, 2, 2, 2, 2, 2, 2, 8, 2, 2, 9,
                                                2, 2, 2, 2, 2,
                                                8, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 2, 2, 2, 2, 9, 8, 9,
                                                9, 2, 2, 2, 2, 8, 8, 8,
                                                8, 8, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 3, 3, 3, 3, 3, 9, 9, 9, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9,
                                                2, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 2, 2, 2, 2, 9, 0,
                                                2, 2, 2, 2, 2, 8, 8, 8,
                                                8, 8, 8, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 3, 3, 9, 3, 9, 9, 9, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3,
                                                2, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 2, 2, 2, 2, 9, 2,
                                                2, 2, 2, 2, 2, 2, 8, 8,
                                                8, 8, 8, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 8, 9, 8, 3, 9, 3, 9, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 2, 2, 2, 2, 9, 2,
                                                2, 2, 2, 2, 2, 2, 2, 8,
                                                2, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 8, 9, 8, 8, 8, 9, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 9, 2, 2,
                                                2, 2, 2, 2, 8, 2, 9, 8,
                                                8, 8, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 9, 9, 8, 8, 9, 9, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 9, 2, 2,
                                                2, 2, 8, 8, 9, 2, 9, 9,
                                                8, 8, 3, 3, 3, 3, 3, 3, 2, 8, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 9, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2,
                                                2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 9, 9, 9, 9, 9, 2, 2,
                                                2, 2, 2, 2, 9, 9, 8, 8,
                                                9, 9, 3, 3, 3, 3, 3, 3, 2, 8, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 9, 9, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 4,
                                                2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 8, 9, 8, 8, 8, 9, 2, 2,
                                                2, 8, 8, 2, 8, 9, 8, 8,
                                                3, 9, 3, 2, 3, 3, 3, 2, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 8, 8, 2, 2, 8, 9, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 8, 8, 8, 8, 0, 9, 2, 2,
                                                2, 8, 8, 8, 8, 8, 8, 3,
                                                3, 3, 9, 2, 3, 3, 3, 2, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 2, 2, 8, 2, 2, 2, 2, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 8, 8, 8, 8, 8, 9, 2, 2,
                                                8, 8, 8, 8, 8, 8, 8, 3,
                                                3, 3, 3, 9, 3, 3, 2, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 9, 2, 2, 2, 9, 2, 2, 2, 2, 8, 8, 2, 2, 2, 2, 2, 8, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 8, 9, 9, 2, 2, 2,
                                                2, 8, 8, 8, 8, 8, 8, 3,
                                                3, 3, 3, 3, 3, 3, 2, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 8, 8, 8, 2, 2, 2, 8, 8, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 8, 9, 9, 2, 2, 2,
                                                2, 8, 8, 8, 8, 8, 3, 3,
                                                3, 3, 3, 3, 3, 3, 2, 2, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8, 8, 8, 2, 2, 2, 8, 8, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                2, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 9, 2, 2, 2, 2, 2,
                                                2, 2, 8, 8, 2, 2, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 2, 2, 8, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8, 8, 8, 2, 2, 2, 8, 8, 8, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                2, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 9, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8, 8, 8, 2, 2, 8, 8, 8, 8, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                2, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 9, 2, 2, 2, 2, 3, 3,
                                                3, 3, 2, 2, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 8, 8, 8, 8, 2, 2, 2, 8, 8, 2, 8, 2, 2, 2, 2,
                                                2, 9, 2, 2, 3,
                                                9, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 2, 2, 3, 3, 3, 3,
                                                3, 3, 3, 3, 2, 2, 3, 3,
                                                3, 3, 3, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 2, 2, 8, 9, 8, 8, 2, 2, 2, 8, 3, 2, 8, 2, 2, 2, 2,
                                                2, 9, 2, 2, 3,
                                                9, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 2, 8, 3, 3, 3, 3, 3, 3,
                                                3, 3, 2, 2, 2, 2, 3, 3,
                                                3, 3, 9, 0, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 2, 2, 2, 9, 8, 8, 2, 2, 2, 8, 3, 3, 8, 2, 2, 2, 2,
                                                2, 2, 9, 2, 3,
                                                9, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3,
                                                3, 2, 2, 2, 2, 2, 2, 3,
                                                3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2, 2, 2, 9, 8, 8, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 3,
                                                9, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 2, 2, 8, 8, 2, 4, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 2, 2, 2, 9, 8, 8, 8, 2, 2, 2, 3, 8, 2, 2, 2, 2, 2,
                                                2, 2, 9, 2, 3,
                                                3, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                2, 2, 8, 8, 3, 8, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 8, 8, 8, 3, 3, 2, 4, 8, 8, 2, 2, 2, 2, 2,
                                                2, 2, 9, 2, 3,
                                                3, 9, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 3, 3, 2, 3, 3, 3, 3, 3, 3,
                                                2, 2, 8, 8, 3, 3, 8, 3,
                                                3, 3, 3, 3, 3, 3, 9, 8, 9, 8, 9, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 9, 8, 8, 3, 3, 3, 3, 3, 8, 2, 2, 2, 2, 2, 2,
                                                2, 2, 9, 9, 3,
                                                3, 9, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 2, 2, 3, 3, 3, 3, 3, 3,
                                                2, 8, 8, 8, 8, 3, 8, 2,
                                                3, 3, 3, 3, 3, 2, 9, 8, 8, 8, 8, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 9, 3, 3, 2, 2, 2, 2, 2, 8, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 8, 2,
                                                2, 2, 2, 2, 3,
                                                3, 3, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 3, 3, 3, 3, 3, 3, 3,
                                                2, 8, 8, 8, 2, 3, 8, 2,
                                                3, 3, 3, 3, 2, 2, 8, 8, 8, 9, 8, 0, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 6, 9, 9, 2, 2, 2, 2, 2, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 2,
                                                2, 2, 2, 2, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 3, 3, 3, 3, 3, 3, 3,
                                                2, 2, 8, 8, 8, 8, 2, 2,
                                                3, 3, 3, 3, 2, 2, 8, 8, 8, 9, 8, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 9, 9, 2, 2, 2, 2, 2, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 8, 8,
                                                2, 2, 2, 2, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 8, 8, 8, 3, 3, 3, 3, 3,
                                                2, 2, 2, 8, 8, 2, 2, 2,
                                                3, 3, 3, 3, 2, 2, 9, 8, 8, 8, 9, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 9, 2, 2, 2, 2, 2, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 8,
                                                2, 2, 2, 2, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 8, 8, 8, 2, 2, 2, 2,
                                                2, 2, 2, 8, 8, 2, 2, 2,
                                                2, 3, 3, 8, 2, 2, 9, 8, 8, 8, 8, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 3, 8,
                                                2, 2, 2, 2, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 8, 3, 8, 2, 2, 9, 8, 9, 9, 8, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 3, 8, 8,
                                                2, 2, 2, 2, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 3, 8, 9, 8, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 8, 3, 8, 2, 9, 8, 8, 8, 8, 2, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 9, 3, 3, 3, 9, 3, 3, 3, 3, 3, 8, 8, 2,
                                                2, 2, 2, 2, 8,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 3, 3, 2, 9, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 8, 8, 2, 2, 9, 8, 9, 9, 8, 9, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 9, 3, 3, 3, 9, 3, 3, 3, 3, 8, 8, 2, 2,
                                                2, 2, 2, 8, 8,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 2, 9, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2,
                                                8, 3, 8, 2, 2, 9, 2, 9, 9, 8, 8, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 2, 3, 3, 3, 0, 3, 3, 3, 3, 8, 2, 2, 2,
                                                2, 2, 2, 8, 8,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 8,
                                                8, 3, 8, 2, 2, 2, 9, 2, 2, 9, 9, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 8, 2, 2, 2, 3,
                                                2, 2, 2, 8, 8,
                                                2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 3, 9, 2, 2, 2,
                                                2, 2, 2, 3, 3, 3, 2, 8,
                                                3, 3, 8, 2, 2, 2, 2, 2, 2, 8, 8, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 3,
                                                3, 2, 8, 8, 8,
                                                2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 9, 3, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3,
                                                8, 8, 2, 2, 2, 2, 2, 2, 2, 8, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3,
                                                3, 8, 8, 8, 8,
                                                2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 3, 3, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3,
                                                8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 9, 3, 3,
                                                3, 8, 3, 4, 9,
                                                2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3,
                                                2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 9, 9, 9, 8, 9, 3,
                                                3, 8, 3, 3, 9,
                                                2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
                                                2, 3, 3, 9, 2, 3, 3, 3,
                                                2, 2, 2, 2, 2, 8, 8, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 9, 8, 9, 9, 8, 9, 3,
                                                3, 3, 3, 9, 9,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
                                                2, 3, 3, 2, 9, 2, 2, 3,
                                                3, 2, 2, 2, 2, 8, 3, 3, 9, 2, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8, 2, 3, 3, 3, 2, 8, 8, 8, 2, 9, 3,
                                                3, 3, 3, 9, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
                                                2, 3, 3, 2, 9, 2, 2, 3,
                                                3, 2, 2, 2, 8, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 9, 2, 2, 2, 2, 2, 2, 2, 2, 8, 2, 3, 3, 3, 8, 8, 8, 8, 9, 3, 3,
                                                3, 3, 3, 9, 8,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
                                                2, 3, 3, 2, 2, 2, 9, 2,
                                                3, 2, 2, 2, 8, 3, 3, 3, 3, 8, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 9, 8, 2, 2, 2, 2, 2, 2, 8, 8, 2, 3, 3, 3, 8, 8, 9, 9, 9, 3, 3,
                                                3, 3, 3, 3, 8,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 3, 3, 3, 3, 2, 2, 2, 2, 2,
                                                2, 3, 3, 2, 2, 9, 0, 9,
                                                3, 2, 2, 2, 8, 2, 3, 3, 2, 8, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 9, 8, 2, 2, 2, 2, 2, 2, 8, 8, 2, 3, 3, 2, 9, 8, 8, 9, 9, 3, 3,
                                                3, 9, 3, 8, 8,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2,
                                                3, 3, 3, 3, 2, 2, 2, 2,
                                                3, 3, 2, 8, 8, 4, 9, 9, 8, 8, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 9, 0, 8, 8, 2, 2, 2, 2, 8, 8, 8, 2, 3, 3, 2, 9, 9, 8, 9, 8, 9, 3,
                                                3, 9, 9, 8, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 8, 8, 8, 2, 9, 8, 8, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 9, 8, 8, 2, 2, 2, 2, 8, 8, 8, 8, 3, 3, 8, 8, 9, 8, 9, 8, 9, 8,
                                                3, 3, 8, 8, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 8, 2, 2, 2, 2, 2,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 8, 8, 8, 9, 9, 8, 8, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 8, 9, 8, 8, 2, 2, 2, 8, 8, 8, 8, 8, 3, 3, 8, 8, 8, 9, 9, 9, 8, 8,
                                                3, 9, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 8, 8, 8, 8, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 8, 8, 8, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 9, 8, 8, 2, 2, 2, 2, 2, 8, 8, 8, 8, 3, 3, 2, 9, 8, 9, 8, 9, 9, 9,
                                                9, 9, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 8, 8, 8, 8, 8, 8, 2, 2, 2,
                                                2, 2, 2, 2, 9, 9, 3, 3,
                                                3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 2, 2, 3, 2, 2, 2, 8, 8, 8, 3, 3, 3, 9, 9, 8, 8, 9, 9, 9,
                                                2, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 8, 8, 8, 8, 8, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 9, 3, 3,
                                                3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 2, 2, 3, 3, 3, 3, 8, 8, 8, 8, 3, 3, 3, 8, 0, 8, 9, 2, 9, 3,
                                                3, 3, 2, 2, 2,
                                                2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 8, 8, 8, 2, 2, 2, 2, 9,
                                                9, 9, 2, 2, 2, 9, 9, 3,
                                                3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 8, 2, 3, 3, 3, 3, 3, 3, 3, 8, 8, 3, 3, 3, 3, 9, 9, 3, 3, 3, 3,
                                                3, 3, 3, 2, 2,
                                                3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 8, 8, 2, 2, 9, 9, 9, 9,
                                                3, 3, 9, 9, 2, 2, 2, 9,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 2, 9, 9, 3, 3, 3,
                                                3, 3, 9, 9, 3, 3, 2, 9,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 }
                };

                Scanner scanner = new Scanner(System.in);
                String userInput;
                boolean endGame = false;
                int row = 0, column = 0;
                int rowPosition = 25, columnPosition = 27;
                int[] avatar = { rowPosition, columnPosition };
                int torchRange = 2;
                int viewport = 13;
                int hour = 14, minute = 00, minuteTotal;
                boolean onShip = false;
                int surface = 3; // Valor para ver sobre que superficie puede andar

                System.out.print("\033[H\033[2J");
                System.out.flush();// Borro pantalla antes de empezar

                do {

                        // Intento mugre de hora & antorcha
                        minute = minute + 5;
                        if (minute == 60) {
                                hour = hour + 1;
                                minute = 0;
                        }
                        if (hour == 24) {
                                hour = 0;
                        }
                        minuteTotal = hour * 60 + minute;

                        if (minuteTotal < 240) {
                                torchRange = 2;
                        } else if (hour < 5) {
                                torchRange = 6;
                        } else if (hour < 6) {
                                torchRange = 8;
                        } else if (hour < 7) {
                                torchRange = 12;
                        } else if (hour >= 7 && hour <= 18) {
                                torchRange = 100;
                        } else if (hour > 20) {
                                torchRange = 4;
                        } else if (hour > 19) {
                                torchRange = 6;
                        } else if (hour > 18) {
                                torchRange = 8;
                        } else {
                                torchRange = 2;
                        }
                        // Fin de intento mugre

                        System.out.print("\033[0;0H");
                        System.out.flush(); // <-- En lugar de borrar pantalla, reposiciono el cursor
                                            // en el borde superior izquierdo de la pantalla
                                            // Con esto se atenúa el parpadeo

                        System.out.print(BAR);
                        for (int i = 0; i <= viewport * 2; i = i + 1) {
                                System.out.print(BAR);
                        }
                        System.out.println(BAR);

                        // INICIO DE IMPRESION DEL CIELO Y EL SOL
                        System.out.print(BAR);
                        for (int i = 0; i <= viewport * 2; i = i + 1) {
                                if ((hour > 6) && (hour <= 18)
                                                && (i == (viewport * 2) - ((hour - 6) * (viewport * 2) / 12))) {
                                        System.out.print(SOL);
                                } else {
                                        System.out.print(CIELO);
                                }
                        }
                        System.out.println(BAR);
                        // FIN DE IMPRESION DEL CIELO Y EL SOL

                        System.out.print(BAR);
                        for (int i = 0; i <= viewport * 2; i = i + 1) {
                                System.out.print(BAR);
                        }
                        System.out.println(BAR);

                        printWorld(ULTIMA, avatar, viewport, torchRange);

                        // Impresion de data extra y menu de usuario
                        System.out.print("Lat:[" + rowPosition + "] Long:[" + columnPosition + "] - ");
                        System.out.println("[" + hour + "]h:[" + minute + "]m     ");
                        System.out.println();
                        System.out.println("Ingrese opcion: w/a/s/d (v:Viewport) (b:barco) (f:Salir)");
                        userInput = scanner.nextLine();
                        // Fin de impresión de data extra y menu de usuario

                        // INICIO DE ANALISIS DEL MOVIMIENTO
                        if (userInput.equalsIgnoreCase("f")) {
                                endGame = true;
                        } else if (userInput.equalsIgnoreCase("w")
                                        && ULTIMA[rowPosition - 1][columnPosition] % surface == 0) {
                                rowPosition = rowPosition - 1;
                        } else if (userInput.equalsIgnoreCase("s")
                                        && ULTIMA[rowPosition + 1][columnPosition] % surface == 0) {
                                rowPosition = rowPosition + 1;
                        } else if (userInput.equalsIgnoreCase("a")
                                        && ULTIMA[rowPosition][columnPosition - 1] % surface == 0) {
                                columnPosition = columnPosition - 1;
                        } else if (userInput.equalsIgnoreCase("d")
                                        && ULTIMA[rowPosition][columnPosition + 1] % surface == 0) {
                                columnPosition = columnPosition + 1;
                        } else if (userInput.equalsIgnoreCase("v")) {
                                viewport = scanner.nextInt();
                                System.out.print("\033[H\033[2J");
                                System.out.flush();
                        } // Borro pantalla al redimensionar el ViewPort
                        else if (userInput.equalsIgnoreCase("b")) {
                                onShip = !onShip;
                        }
                        // FIN DEL ANALISIS DE MOVIMIENTO

                } while (!endGame);
        }

        // Zona de constantes ANSI para mejorar la visualización de gráficos ASCII

        private static void printWorld(int[][] ULTIMA, int[] avatar, int viewport, int torchRange) {
                int rowPosition = avatar[0];
                int columnPosition = avatar[1];
                
                // INICIO IMPRESION DEL MAPA
                for (int row = 0; row < ULTIMA.length; row = row + 1) {
                        if ((rowPosition + viewport >= row) && (rowPosition - viewport <= row)) {
                                // elMundo[miFila]
                                System.out.print(BAR);
                                for (int column = 0; column < ULTIMA[row].length; column = column + 1) {

                                        if (row == rowPosition && column == columnPosition) {
                                                // IMPRIMO AL PERSONAJE
                                                if (onShip) {
                                                        System.out.print(BARCO);
                                                        surface = 3;
                                                } else {
                                                        System.out.print(PERSONAJE);
                                                        surface = 2;
                                                }

                                        } else if ((columnPosition + viewport >= column)
                                                        && (columnPosition - viewport <= column)) {
                                                // IMPRIMO EL MAPA (si debo)
                                                if ((Math.pow(rowPosition - row, 2)
                                                                + Math.pow(columnPosition - column, 2)) <= (Math
                                                                                .pow(torchRange, 2))) {
                                                        // INICIO DEL PARSEO
                                                        if (ULTIMA[row][column] == ID_CASTILLO) {
                                                                System.out.print(CASTILLO);
                                                        } else if (ULTIMA[row][column] == ID_PARED) {
                                                                System.out.print(PARED);
                                                        } else if (ULTIMA[row][column] == ID_CESPED) {
                                                                System.out.print(CESPED);
                                                        } else if (ULTIMA[row][column] == ID_AGUA) {
                                                                System.out.print(AGUA);
                                                        } else if (ULTIMA[row][column] == ID_CUEVA) {
                                                                System.out.print(CUEVA);
                                                        } else if (ULTIMA[row][column] == ID_CESPEDALTO) {
                                                                System.out.print(CESPEDALTO);
                                                        } else if (ULTIMA[row][column] == ID_ARBOL) {
                                                                System.out.print(ARBOL);
                                                        } else if (ULTIMA[row][column] == ID_PICO) {
                                                                System.out.print(PICO);
                                                        } else if (ULTIMA[row][column] == ID_SIETE) {
                                                                System.out.print(SIETE);
                                                        } else if (ULTIMA[row][column] == ID_CINCO) {
                                                                System.out.print(CINCO);
                                                        }
                                                        // FIN DEL PARSEO
                                                } else {
                                                        System.out.print(TINIEBLAS);
                                                }
                                        }
                                }
                                System.out.println(BAR);
                        }
                }
                System.out.print(BAR);
                for (int i = 0; i <= viewport * 2; i = i + 1) {
                        System.out.print(BAR);
                }
                System.out.println(BAR);
                // FIN IMPRESION DEL MAPA
        }

        public static final String RESET = "\033[0m"; // Text Reset
        public static final String INICIO = "\033["; // Inicio de la cadena de color

        // LETRA

        // Regular
        public static final String BLACK = "0;30"; // BLACK
        public static final String RED = "0;31"; // RED
        public static final String GREEN = "0;32"; // GREEN
        public static final String YELLOW = "0;33"; // YELLOW
        public static final String BLUE = "3;34"; // BLUE
        public static final String PURPLE = "0;35"; // PURPLE
        public static final String CYAN = "0;36"; // CYAN
        public static final String WHITE = "0;37"; // WHITE

        // Negrita
        public static final String BLACK_BOLD = "1;30"; // BLACK
        public static final String RED_BOLD = "1;31"; // RED
        public static final String GREEN_BOLD = "1;32"; // GREEN
        public static final String YELLOW_BOLD = "1;33"; // YELLOW
        public static final String BLUE_BOLD = "1;34"; // BLUE
        public static final String PURPLE_BOLD = "1;35"; // PURPLE
        public static final String CYAN_BOLD = "1;36"; // CYAN
        public static final String WHITE_BOLD = "1;37"; // WHITE

        // Subrayado
        public static final String BLACK_UNDERLINED = "4;30"; // BLACK
        public static final String RED_UNDERLINED = "4;31"; // RED
        public static final String GREEN_UNDERLINED = "4;32"; // GREEN
        public static final String YELLOW_UNDERLINED = "4;33"; // YELLOW
        public static final String BLUE_UNDERLINED = "4;34"; // BLUE
        public static final String PURPLE_UNDERLINED = "4;35"; // PURPLE
        public static final String CYAN_UNDERLINED = "4;36"; // CYAN
        public static final String WHITE_UNDERLINED = "4;37"; // WHITE

        // FONDOS

        // Normales
        public static final String BLACK_BACKGROUND = ";40m"; // BLACK
        public static final String RED_BACKGROUND = ";41m"; // RED
        public static final String GREEN_BACKGROUND = ";42m"; // GREEN
        public static final String YELLOW_BACKGROUND = ";43m"; // YELLOW
        public static final String BLUE_BACKGROUND = ";44m"; // BLUE
        public static final String PURPLE_BACKGROUND = ";45m"; // PURPLE
        public static final String CYAN_BACKGROUND = ";46m"; // CYAN
        public static final String WHITE_BACKGROUND = ";47m"; // WHITE

        // Alta intensidad
        public static final String BLACK_BRIGHT = ";0;90m"; // BLACK
        public static final String RED_BRIGHT = ";0;91m"; // RED
        public static final String GREEN_BRIGHT = ";0;92m"; // GREEN
        public static final String YELLOW_BRIGHT = ";0;93m"; // YELLOW
        public static final String BLUE_BRIGHT = ";0;94m"; // BLUE
        public static final String PURPLE_BRIGHT = ";0;95m"; // PURPLE
        public static final String CYAN_BRIGHT = ";0;96m"; // CYAN
        public static final String WHITE_BRIGHT = ";0;97m"; // WHITE

        // Negrita & Alta intensidad
        public static final String BLACK_BOLD_BRIGHT = ";1;90m"; // BLACK
        public static final String RED_BOLD_BRIGHT = ";1;91m"; // RED
        public static final String GREEN_BOLD_BRIGHT = ";1;92m"; // GREEN
        public static final String YELLOW_BOLD_BRIGHT = ";1;93m"; // YELLOW
        public static final String BLUE_BOLD_BRIGHT = ";1;94m"; // BLUE
        public static final String PURPLE_BOLD_BRIGHT = ";1;95m"; // PURPLE
        public static final String CYAN_BOLD_BRIGHT = ";1;96m"; // CYAN
        public static final String WHITE_BOLD_BRIGHT = ";1;97m"; // WHITE

        // Alta intensidad
        public static final String BLACK_BACKGROUND_BRIGHT = ";0;100m"; // BLACK
        public static final String RED_BACKGROUND_BRIGHT = ";0;101m"; // RED
        public static final String GREEN_BACKGROUND_BRIGHT = ";0;102m"; // GREEN
        public static final String YELLOW_BACKGROUND_BRIGHT = ";0;103m"; // YELLOW
        public static final String BLUE_BACKGROUND_BRIGHT = ";0;104m"; // BLUE
        public static final String PURPLE_BACKGROUND_BRIGHT = ";0;105m"; // PURPLE
        public static final String CYAN_BACKGROUND_BRIGHT = ";0;106m"; // CYAN
        public static final String WHITE_BACKGROUND_BRIGHT = ";0;107m"; // WHITE

        // Mosaicos
        public static final String PERSONAJE = INICIO + WHITE + BLACK_BACKGROUND + "_O_ " + RESET;
        public static final String BARCO = INICIO + WHITE + BLACK_BACKGROUND + ":__;" + RESET;

        public static final String TINIEBLAS = INICIO + BLACK + BLACK_BACKGROUND + " .. " + RESET;

        public static final String BAR = INICIO + BLACK + BLUE_BACKGROUND + "    " + RESET;

        public static final int ID_CUEVA = 0;
        public static final int ID_PARED = 1;
        public static final int ID_CESPED = 2;
        public static final int ID_AGUA = 3;
        public static final int ID_CASTILLO = 4;
        public static final int ID_CINCO = 5;
        public static final int ID_CESPEDALTO = 6;
        public static final int ID_SIETE = 7;
        public static final int ID_ARBOL = 8;
        public static final int ID_PICO = 9;

        public static final String CUEVA = INICIO + WHITE + BLACK_BACKGROUND + "/" + RESET +
                        INICIO + WHITE + BLACK_BACKGROUND + "o\\" + RESET +
                        INICIO + WHITE + BLACK_BACKGROUND + "^" + RESET;

        public static final String PARED = INICIO + WHITE_BOLD + BLACK_BACKGROUND + "||||" + RESET;

        public static final String CESPED = INICIO + BLUE + GREEN_BOLD_BRIGHT + ".::'" + RESET;

        public static final String AGUA = INICIO + BLUE + BLUE_BACKGROUND_BRIGHT + " ~ ~" + RESET;

        public static final String CASTILLO = INICIO + WHITE + BLACK_BACKGROUND + "]#[_" + RESET;

        public static final String CINCO = INICIO + WHITE + BLACK_BACKGROUND + " [5]" + RESET;

        public static final String CESPEDALTO = INICIO + WHITE_BOLD + BLACK_BACKGROUND + "[--]" + RESET;

        public static final String ARBOL = INICIO + GREEN_BOLD + BLACK_BACKGROUND + "*" + RESET +
                        INICIO + BLACK_BOLD + BLACK_BACKGROUND + "Y" + RESET +
                        INICIO + GREEN_BOLD + BLACK_BACKGROUND + "*." + RESET;

        public static final String SIETE = INICIO + GREEN_BOLD + GREEN_BOLD_BRIGHT + " [7]" + RESET;

        public static final String PICO = INICIO + WHITE + BLACK_BACKGROUND + "/" + RESET +
                        INICIO + WHITE + BLACK_BACKGROUND + "^\\" + RESET +
                        INICIO + WHITE + BLACK_BACKGROUND + "^" + RESET;

        public static final String SOL = INICIO + YELLOW_BOLD + BLUE_BACKGROUND + " () " + RESET;
        public static final String CIELO = INICIO + BLUE_BOLD + CYAN_BACKGROUND_BRIGHT + "    " + RESET;

}